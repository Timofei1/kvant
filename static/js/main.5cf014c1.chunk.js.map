{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/Persik1.js","panels/Persik2.js","panels/Persik3.js","panels/Persik5.js","App.js","sw.js","index.js"],"names":["Home","go","id","fetchedUser","onClick","data-to","fill","title","size","level","before","width","height","component","href","Persik","osname","platform","Persik1","left","IOS","style","margin","Persik2","Persik3","Persik5","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","connect","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","isLocalhost","Boolean","window","location","hostname","match","send","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5cf014c1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\nimport Icon24Game from '@vkontakte/icons/dist/24/game';\nimport Icon24Privacy from '@vkontakte/icons/dist/24/privacy';\nimport Icon24Newsfeed from '@vkontakte/icons/dist/24/newsfeed';\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\nimport Icon24LogoLivejournal from '@vkontakte/icons/dist/24/logo_livejournal';\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\n\nconst Home = ({go, id, fetchedUser}) => (\n\n\n<Panel id={id}>\n\t\t<PanelHeader>Эксерты Игры</PanelHeader>\n\t\t <Tabbar>\n          <TabbarItem\n            onClick={go}\n            data-to=\"home\"\n          ><Icon28ArticleOutline fill=\"#0000FF\" /></TabbarItem>\n          <TabbarItem\n            onClick={go}\n            data-to=\"persik\"\n          ><Icon28HelpOutline /></TabbarItem>\n        </Tabbar>\n       \n        <Group title=\"Эксперты Игры FAQ\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik1\" before={\n                \n                <Icon24Privacy width={30} height={30} /> }>\n                    Правила беседы\n                \n                </Button>\n                <br/>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik2\" before={\n                 <Icon24Newsfeed width={30} height={30}/>}>\n                    Правила оценки постов\n                \n                </Button>\n                <br/>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik3\" before={\n                  <Icon24CommentOutline width={30} height={30}/>}>\n                    Частые вопросы\n                </Button>\n              </Div>\n              </Group>\n                \n                <Group title=\"Полезные ссылки\">\n                  <Div>\n                <Button size=\"xl\" level=\"2\" component=\"a\" href=\"#\" before={\n                  <Icon24Flash width={30} height={30}/>}>\n                   Оригинал FAQ\n                </Button>\n                <br/>\n                <Button size=\"xl\" level=\"commerce\" component=\"a\" href=\"#\" before={\n                  <Icon24Write width={30} height={30}/>}>\n                    Предложить идею\n                </Button>\n                <br/>\n                <Button size=\"xl\" level=\"2\" component=\"a\" href=\"#\" before={\n                  <Icon24Game width={30} height={30}/>}>\n                    Группа \"Эксперты Игры\"\n                </Button>\n                <br/>\n                <Button size=\"xl\" level=\"2\" component=\"a\" href=\"#\" before={\n                  <Icon24Users width={30} height={30}/>}>\n                    Группа \"Эксперты ВКонтакте\"\n                </Button>\n                \n            </Div>\n            <br/>\n        <br/>\n          \n          </Group>\n\n        \n        \n\t</Panel>\n);\n\n\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n\n};\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\n\nconst Persik = ({go, id, fetchedUser}) => (\n\n\n<Panel id={id}>\n\t\t<PanelHeader>Информация</PanelHeader>\n\t\t <Tabbar>\n          <TabbarItem\n            onClick={go}\n            data-to=\"home\"\n          ><Icon28ArticleOutline  /></TabbarItem>\n          <TabbarItem\n            onClick={go}\n            data-to=\"persik\"\n          ><Icon28HelpOutline fill=\"#0000FF\" /></TabbarItem>\n        </Tabbar>\n        \n        \n\t</Panel>\n);\n\n\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n\n};\n\nexport default Persik;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\nimport {platform, IOS, HeaderButton, Separator} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik1 = ({go, id, fetchedUser}) => (\n\n\n<Panel id={id}>\n\t\t<PanelHeader\n        left={<HeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n         \n           Правила беседы</PanelHeader>\n\t\t <Tabbar>\n          <TabbarItem\n            onClick={go}\n            data-to=\"home\"\n          ><Icon28ArticleOutline fill=\"#0000FF\" /></TabbarItem>\n          <TabbarItem\n            onClick={go}\n            data-to=\"persik\"\n          ><Icon28HelpOutline /></TabbarItem>\n        </Tabbar>\n        \n        <Group>\n          <Div>\n          <h3>📔 У каждой официальной беседы есть свои правила, они нужны для поддержания порядка, с них и начнем:</h3>\n\n1.Мы не оскорбляем друг друга, наказание — <b>пред;</b><br/>\n2.Мы не используем нецензурную лексику, наказание — <b>пред;</b><br/>\n3.Мы не флудим, наказание — <b>пред;</b><br/>\n4.Мы не используем особые хештеги не по назначению, наказание — <b>пред;</b><br/>\n5.Мы не ставим фото группы эксперта на аватарку, наказание — <b>кик;</b><br/>\n6.Мы не просим ставить стрелочки на посты, наказание — <b>бан;</b><br/>\n7.Неадекватное, агрессивное поведение, наказание — <b>бан;</b><br/>\n8.Мы не скидываем ссылки на левые паблики и сайты, а также приглашения в свои чаты / беседы, наказание — <b>пред;</b><br/>\n9.Выдача себя за Администрацию в любой форме, наказание — <b>бан/кик (определяет Администратор);</b><br/>\n10.Мы не нарушаем правил сайта, наказание — <b>определяет Администратор.</b><br/>\n<Separator style={{ margin: '12px 0' }} />\n          </Div>\n        </Group>\n\n\t</Panel>\n);\n\n\n\nPersik1.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n\n};\n\nexport default Persik1;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\nimport {platform, IOS, HeaderButton} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik2 = ({go, id, fetchedUser}) => (\n\n\n<Panel id={id}>\n\t\t<PanelHeader\n    left={<HeaderButton onClick={go} data-to=\"home\">\n    {osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n  </HeaderButton>}\n>\n    Оценка постов</PanelHeader>\n\t\t <Tabbar>\n          <TabbarItem\n            onClick={go}\n            data-to=\"home\"\n          ><Icon28ArticleOutline fill=\"#0000FF\" /></TabbarItem>\n          <TabbarItem\n            onClick={go}\n            data-to=\"persik\"\n          ><Icon28HelpOutline /></TabbarItem>\n        </Tabbar>\n        \n        <Group>\n          <Div>\n            \n          </Div>\n        </Group>\n        \n\t</Panel>\n);\n\n\n\nPersik2.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n\n};\n\nexport default Persik2;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\nimport {platform, IOS, HeaderButton} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik3 = ({go, id, fetchedUser}) => (\n\n\n<Panel id={id}>\n\t\t<PanelHeader\n    left={<HeaderButton onClick={go} data-to=\"home\">\n    {osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n  </HeaderButton>}\n>\n    Частые вопросы</PanelHeader>\n\t\t <Tabbar>\n          <TabbarItem\n            onClick={go}\n            data-to=\"home\"\n          ><Icon28ArticleOutline fill=\"#0000FF\" /></TabbarItem>\n          <TabbarItem\n            onClick={go}\n            data-to=\"persik\"\n          ><Icon28HelpOutline /></TabbarItem>\n        </Tabbar>\n        \n        <Group>\n          <Div>\n            \n          </Div>\n        </Group>\n        \n\t</Panel>\n);\n\n\n\nPersik3.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n\n};\n\nexport default Persik3;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\nimport {platform, IOS, HeaderButton} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst Persik5 = ({go, id, fetchedUser}) => (\n\n\n<Panel id={id}>\n\t\t<PanelHeader>Информация</PanelHeader>\n\t\t <Tabbar>\n          <TabbarItem\n            onClick={go}\n            data-to=\"home\"\n          ><Icon28ArticleOutline fill=\"#0000FF\" /></TabbarItem>\n          <TabbarItem\n            onClick={go}\n            data-to=\"persik\"\n          ><Icon28HelpOutline /></TabbarItem>\n        </Tabbar>\n        \n        <Group>\n          <Div>\n          \n          </Div>\n        </Group>\n        \n\t</Panel>\n);\n\n\n\nPersik5.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n\n};\n\nexport default Persik5;","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28Game from '@vkontakte/icons/dist/28/game';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Persik1 from './panels/Persik1';\nimport Persik2 from './panels/Persik2';\nimport Persik3 from './panels/Persik3';\nimport Persik5 from './panels/Persik5';\nimport Persik4 from './panels/Persik5';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t    \n\t\t\t<Home id='home' go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t\t<Persik1 id='persik1' go={go} />\n\t\t\t<Persik2 id='persik2' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik3 id='persik3' go={go} />\n\t\t\t<Persik4 id='persik4' go={go} />\n\t\t\t<Persik5 id='persik5' go={go} />\n\t\t</View>\n\t);\n\n}\n\nexport default App;\n\n\n    \n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\n\nconnect.send('VKWebAppInit');\n\n\n\nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}